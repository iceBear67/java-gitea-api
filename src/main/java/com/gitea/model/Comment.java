/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.16.8+97-gee14285
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.gitea.model;

import java.util.Objects;
import com.gitea.model.User;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;


/**
 * Comment represents a comment on a commit or issue
 */
@ApiModel(description = "Comment represents a comment on a commit or issue")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-07T10:42:04.488+08:00")
public class Comment   {
  @SerializedName("body")
  private String body = null;

  @SerializedName("created_at")
  private DateTime createdAt = null;

  @SerializedName("html_url")
  private String htmlUrl = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("issue_url")
  private String issueUrl = null;

  @SerializedName("original_author")
  private String originalAuthor = null;

  @SerializedName("original_author_id")
  private Long originalAuthorId = null;

  @SerializedName("pull_request_url")
  private String pullRequestUrl = null;

  @SerializedName("updated_at")
  private DateTime updatedAt = null;

  @SerializedName("user")
  private User user = null;

  public Comment body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public Comment createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Comment htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

   /**
   * Get htmlUrl
   * @return htmlUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public Comment id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Comment issueUrl(String issueUrl) {
    this.issueUrl = issueUrl;
    return this;
  }

   /**
   * Get issueUrl
   * @return issueUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getIssueUrl() {
    return issueUrl;
  }

  public void setIssueUrl(String issueUrl) {
    this.issueUrl = issueUrl;
  }

  public Comment originalAuthor(String originalAuthor) {
    this.originalAuthor = originalAuthor;
    return this;
  }

   /**
   * Get originalAuthor
   * @return originalAuthor
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getOriginalAuthor() {
    return originalAuthor;
  }

  public void setOriginalAuthor(String originalAuthor) {
    this.originalAuthor = originalAuthor;
  }

  public Comment originalAuthorId(Long originalAuthorId) {
    this.originalAuthorId = originalAuthorId;
    return this;
  }

   /**
   * Get originalAuthorId
   * @return originalAuthorId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getOriginalAuthorId() {
    return originalAuthorId;
  }

  public void setOriginalAuthorId(Long originalAuthorId) {
    this.originalAuthorId = originalAuthorId;
  }

  public Comment pullRequestUrl(String pullRequestUrl) {
    this.pullRequestUrl = pullRequestUrl;
    return this;
  }

   /**
   * Get pullRequestUrl
   * @return pullRequestUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPullRequestUrl() {
    return pullRequestUrl;
  }

  public void setPullRequestUrl(String pullRequestUrl) {
    this.pullRequestUrl = pullRequestUrl;
  }

  public Comment updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Comment user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(example = "null", value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.body, comment.body) &&
        Objects.equals(this.createdAt, comment.createdAt) &&
        Objects.equals(this.htmlUrl, comment.htmlUrl) &&
        Objects.equals(this.id, comment.id) &&
        Objects.equals(this.issueUrl, comment.issueUrl) &&
        Objects.equals(this.originalAuthor, comment.originalAuthor) &&
        Objects.equals(this.originalAuthorId, comment.originalAuthorId) &&
        Objects.equals(this.pullRequestUrl, comment.pullRequestUrl) &&
        Objects.equals(this.updatedAt, comment.updatedAt) &&
        Objects.equals(this.user, comment.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, createdAt, htmlUrl, id, issueUrl, originalAuthor, originalAuthorId, pullRequestUrl, updatedAt, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    htmlUrl: ").append(toIndentedString(htmlUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issueUrl: ").append(toIndentedString(issueUrl)).append("\n");
    sb.append("    originalAuthor: ").append(toIndentedString(originalAuthor)).append("\n");
    sb.append("    originalAuthorId: ").append(toIndentedString(originalAuthorId)).append("\n");
    sb.append("    pullRequestUrl: ").append(toIndentedString(pullRequestUrl)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

