/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.16.8+97-gee14285
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.gitea.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * MergePullRequestForm form for merging Pull Request
 */
@ApiModel(description = "MergePullRequestForm form for merging Pull Request")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-07T10:42:04.488+08:00")
public class MergePullRequestOption   {
  /**
   * Gets or Sets _do
   */
  public enum DoEnum {
    @SerializedName("merge")
    MERGE("merge"),
    
    @SerializedName("rebase")
    REBASE("rebase"),
    
    @SerializedName("rebase-merge")
    REBASE_MERGE("rebase-merge"),
    
    @SerializedName("squash")
    SQUASH("squash"),
    
    @SerializedName("manually-merged")
    MANUALLY_MERGED("manually-merged");

    private String value;

    DoEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("Do")
  private DoEnum _do = null;

  @SerializedName("MergeCommitID")
  private String mergeCommitID = null;

  @SerializedName("MergeMessageField")
  private String mergeMessageField = null;

  @SerializedName("MergeTitleField")
  private String mergeTitleField = null;

  @SerializedName("delete_branch_after_merge")
  private Boolean deleteBranchAfterMerge = null;

  @SerializedName("force_merge")
  private Boolean forceMerge = null;

  @SerializedName("head_commit_id")
  private String headCommitId = null;

  public MergePullRequestOption _do(DoEnum _do) {
    this._do = _do;
    return this;
  }

   /**
   * Get _do
   * @return _do
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public DoEnum getDo() {
    return _do;
  }

  public void setDo(DoEnum _do) {
    this._do = _do;
  }

  public MergePullRequestOption mergeCommitID(String mergeCommitID) {
    this.mergeCommitID = mergeCommitID;
    return this;
  }

   /**
   * Get mergeCommitID
   * @return mergeCommitID
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMergeCommitID() {
    return mergeCommitID;
  }

  public void setMergeCommitID(String mergeCommitID) {
    this.mergeCommitID = mergeCommitID;
  }

  public MergePullRequestOption mergeMessageField(String mergeMessageField) {
    this.mergeMessageField = mergeMessageField;
    return this;
  }

   /**
   * Get mergeMessageField
   * @return mergeMessageField
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMergeMessageField() {
    return mergeMessageField;
  }

  public void setMergeMessageField(String mergeMessageField) {
    this.mergeMessageField = mergeMessageField;
  }

  public MergePullRequestOption mergeTitleField(String mergeTitleField) {
    this.mergeTitleField = mergeTitleField;
    return this;
  }

   /**
   * Get mergeTitleField
   * @return mergeTitleField
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMergeTitleField() {
    return mergeTitleField;
  }

  public void setMergeTitleField(String mergeTitleField) {
    this.mergeTitleField = mergeTitleField;
  }

  public MergePullRequestOption deleteBranchAfterMerge(Boolean deleteBranchAfterMerge) {
    this.deleteBranchAfterMerge = deleteBranchAfterMerge;
    return this;
  }

   /**
   * Get deleteBranchAfterMerge
   * @return deleteBranchAfterMerge
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getDeleteBranchAfterMerge() {
    return deleteBranchAfterMerge;
  }

  public void setDeleteBranchAfterMerge(Boolean deleteBranchAfterMerge) {
    this.deleteBranchAfterMerge = deleteBranchAfterMerge;
  }

  public MergePullRequestOption forceMerge(Boolean forceMerge) {
    this.forceMerge = forceMerge;
    return this;
  }

   /**
   * Get forceMerge
   * @return forceMerge
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getForceMerge() {
    return forceMerge;
  }

  public void setForceMerge(Boolean forceMerge) {
    this.forceMerge = forceMerge;
  }

  public MergePullRequestOption headCommitId(String headCommitId) {
    this.headCommitId = headCommitId;
    return this;
  }

   /**
   * Get headCommitId
   * @return headCommitId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getHeadCommitId() {
    return headCommitId;
  }

  public void setHeadCommitId(String headCommitId) {
    this.headCommitId = headCommitId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MergePullRequestOption mergePullRequestOption = (MergePullRequestOption) o;
    return Objects.equals(this._do, mergePullRequestOption._do) &&
        Objects.equals(this.mergeCommitID, mergePullRequestOption.mergeCommitID) &&
        Objects.equals(this.mergeMessageField, mergePullRequestOption.mergeMessageField) &&
        Objects.equals(this.mergeTitleField, mergePullRequestOption.mergeTitleField) &&
        Objects.equals(this.deleteBranchAfterMerge, mergePullRequestOption.deleteBranchAfterMerge) &&
        Objects.equals(this.forceMerge, mergePullRequestOption.forceMerge) &&
        Objects.equals(this.headCommitId, mergePullRequestOption.headCommitId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_do, mergeCommitID, mergeMessageField, mergeTitleField, deleteBranchAfterMerge, forceMerge, headCommitId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MergePullRequestOption {\n");
    
    sb.append("    _do: ").append(toIndentedString(_do)).append("\n");
    sb.append("    mergeCommitID: ").append(toIndentedString(mergeCommitID)).append("\n");
    sb.append("    mergeMessageField: ").append(toIndentedString(mergeMessageField)).append("\n");
    sb.append("    mergeTitleField: ").append(toIndentedString(mergeTitleField)).append("\n");
    sb.append("    deleteBranchAfterMerge: ").append(toIndentedString(deleteBranchAfterMerge)).append("\n");
    sb.append("    forceMerge: ").append(toIndentedString(forceMerge)).append("\n");
    sb.append("    headCommitId: ").append(toIndentedString(headCommitId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

