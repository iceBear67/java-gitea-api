/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.16.8+97-gee14285
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.gitea.model;

import java.util.Objects;
import com.gitea.model.Organization;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * Team represents a team in an organization
 */
@ApiModel(description = "Team represents a team in an organization")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-07T10:42:04.488+08:00")
public class Team   {
  @SerializedName("can_create_org_repo")
  private Boolean canCreateOrgRepo = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("includes_all_repositories")
  private Boolean includesAllRepositories = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("organization")
  private Organization organization = null;

  /**
   * Gets or Sets permission
   */
  public enum PermissionEnum {
    @SerializedName("none")
    NONE("none"),
    
    @SerializedName("read")
    READ("read"),
    
    @SerializedName("write")
    WRITE("write"),
    
    @SerializedName("admin")
    ADMIN("admin"),
    
    @SerializedName("owner")
    OWNER("owner");

    private String value;

    PermissionEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("permission")
  private PermissionEnum permission = null;

  @SerializedName("units")
  private List<String> units = new ArrayList<String>();

  @SerializedName("units_map")
  private Map<String, String> unitsMap = new HashMap<String, String>();

  public Team canCreateOrgRepo(Boolean canCreateOrgRepo) {
    this.canCreateOrgRepo = canCreateOrgRepo;
    return this;
  }

   /**
   * Get canCreateOrgRepo
   * @return canCreateOrgRepo
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getCanCreateOrgRepo() {
    return canCreateOrgRepo;
  }

  public void setCanCreateOrgRepo(Boolean canCreateOrgRepo) {
    this.canCreateOrgRepo = canCreateOrgRepo;
  }

  public Team description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Team id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Team includesAllRepositories(Boolean includesAllRepositories) {
    this.includesAllRepositories = includesAllRepositories;
    return this;
  }

   /**
   * Get includesAllRepositories
   * @return includesAllRepositories
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIncludesAllRepositories() {
    return includesAllRepositories;
  }

  public void setIncludesAllRepositories(Boolean includesAllRepositories) {
    this.includesAllRepositories = includesAllRepositories;
  }

  public Team name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Team organization(Organization organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(example = "null", value = "")
  public Organization getOrganization() {
    return organization;
  }

  public void setOrganization(Organization organization) {
    this.organization = organization;
  }

  public Team permission(PermissionEnum permission) {
    this.permission = permission;
    return this;
  }

   /**
   * Get permission
   * @return permission
  **/
  @ApiModelProperty(example = "null", value = "")
  public PermissionEnum getPermission() {
    return permission;
  }

  public void setPermission(PermissionEnum permission) {
    this.permission = permission;
  }

  public Team units(List<String> units) {
    this.units = units;
    return this;
  }

  public Team addUnitsItem(String unitsItem) {
    this.units.add(unitsItem);
    return this;
  }

   /**
   * Get units
   * @return units
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getUnits() {
    return units;
  }

  public void setUnits(List<String> units) {
    this.units = units;
  }

  public Team unitsMap(Map<String, String> unitsMap) {
    this.unitsMap = unitsMap;
    return this;
  }

  public Team putUnitsMapItem(String key, String unitsMapItem) {
    this.unitsMap.put(key, unitsMapItem);
    return this;
  }

   /**
   * Get unitsMap
   * @return unitsMap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, String> getUnitsMap() {
    return unitsMap;
  }

  public void setUnitsMap(Map<String, String> unitsMap) {
    this.unitsMap = unitsMap;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Team team = (Team) o;
    return Objects.equals(this.canCreateOrgRepo, team.canCreateOrgRepo) &&
        Objects.equals(this.description, team.description) &&
        Objects.equals(this.id, team.id) &&
        Objects.equals(this.includesAllRepositories, team.includesAllRepositories) &&
        Objects.equals(this.name, team.name) &&
        Objects.equals(this.organization, team.organization) &&
        Objects.equals(this.permission, team.permission) &&
        Objects.equals(this.units, team.units) &&
        Objects.equals(this.unitsMap, team.unitsMap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canCreateOrgRepo, description, id, includesAllRepositories, name, organization, permission, units, unitsMap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Team {\n");
    
    sb.append("    canCreateOrgRepo: ").append(toIndentedString(canCreateOrgRepo)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    includesAllRepositories: ").append(toIndentedString(includesAllRepositories)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    unitsMap: ").append(toIndentedString(unitsMap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

