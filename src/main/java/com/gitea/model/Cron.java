/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.16.8+97-gee14285
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.gitea.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;


/**
 * Cron represents a Cron task
 */
@ApiModel(description = "Cron represents a Cron task")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-07T10:42:04.488+08:00")
public class Cron   {
  @SerializedName("exec_times")
  private Long execTimes = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("next")
  private DateTime next = null;

  @SerializedName("prev")
  private DateTime prev = null;

  @SerializedName("schedule")
  private String schedule = null;

  public Cron execTimes(Long execTimes) {
    this.execTimes = execTimes;
    return this;
  }

   /**
   * Get execTimes
   * @return execTimes
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getExecTimes() {
    return execTimes;
  }

  public void setExecTimes(Long execTimes) {
    this.execTimes = execTimes;
  }

  public Cron name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Cron next(DateTime next) {
    this.next = next;
    return this;
  }

   /**
   * Get next
   * @return next
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getNext() {
    return next;
  }

  public void setNext(DateTime next) {
    this.next = next;
  }

  public Cron prev(DateTime prev) {
    this.prev = prev;
    return this;
  }

   /**
   * Get prev
   * @return prev
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getPrev() {
    return prev;
  }

  public void setPrev(DateTime prev) {
    this.prev = prev;
  }

  public Cron schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cron cron = (Cron) o;
    return Objects.equals(this.execTimes, cron.execTimes) &&
        Objects.equals(this.name, cron.name) &&
        Objects.equals(this.next, cron.next) &&
        Objects.equals(this.prev, cron.prev) &&
        Objects.equals(this.schedule, cron.schedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(execTimes, name, next, prev, schedule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cron {\n");
    
    sb.append("    execTimes: ").append(toIndentedString(execTimes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

